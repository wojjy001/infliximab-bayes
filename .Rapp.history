3/0.998266*468135.7
3/0.188329*468135.7
rm(list=ls(all=TRUE))#
	library(plyr) #
	library(dplyr)	#
	library(mrgsolve)	#
	setwd("/Volumes/Prosecutor/PhD/InfliximabBayes/infliximab-bayes/")#
	source("/Volumes/Prosecutor/PhD/InfliximabBayes/infliximab-bayes/Project/model.R")#
	input.optimise.data <- data.frame(#
		ID = 1,#
		time = c(378,434,490,546),	#
		ALB = 3.621317186,	#
		ADA = 1,	#
		ETA1 = 0.688112345,	#
		ETA2 = -0.087150995,	#
		ETA3 = 0.764270184,	#
		ETA4 = -0.964647963,	#
		ERRPRO = -1.03772694,	#
		amt = 0,	#
		evid = c(1,1,1,0),	#
		cmt = 1,	#
		rate = c(-2,-2,-2,0)	#
	)#
	initial.compartment <- list(CENT = 0.53246085,PERI = 0.124347732,AUT = 84.23292059)#
	optim.mod1 <- mod %>% init(initial.compartment) %>% carry.out(amt,ERRPRO)#
	last.dose <- 468135.7002#
	last.IPRE <- 0.18832934#
		if (last.IPRE < 3 | last.IPRE >= 5) {#
			initial.dose <- 3/last.IPRE*last.dose	#
		} else {#
			initial.dose <- last.dose	#
		}#
		initial.par <- c(initial.dose,initial.dose,initial.dose,0.01)#
		lower.limit <- c(0.0001,0.0001,0.0001,0.0001)#
		upper.limit <- c(Inf,Inf,Inf,Inf)#
		par <- initial.par#
	optimise.dose <- function(par) {#
		input.optimise.data$amt[1] <- par[1]#
		input.optimise.data$amt[2] <- par[2]#
		input.optimise.data$amt[3] <- par[3]#
		err <- par[4]#
		new.optimise.data <- optim.mod1 %>% data_set(input.optimise.data) %>% mrgsim()#
		new.optimise.data <- as.data.frame(new.optimise.data)#
		yhat <- new.optimise.data$IPRE[new.optimise.data$time > 378]#
		print(yhat)#
		res <- dnorm(3,yhat,yhat*err,log = T)	#
		objective <- -1*sum(res)#
#
		diagnosticflag <- T#
#
	    if (diagnosticflag == T) {#
	      bayes1buffer <<- c(bayes1buffer,log10(par[1]/initial.par[1]))#
	      bayes2buffer <<- c(bayes2buffer,log10(par[2]/initial.par[2]))#
				bayes3buffer <<- c(bayes3buffer,log10(par[3]/initial.par[3]))#
				bayes4buffer <<- c(bayes4buffer,log10(par[4]/initial.par[4]))#
	      iterationbuffer <- 1:length(bayes1buffer)#
	      if (length(iterationbuffer) %% 5 == 0) { #
          plot(iterationbuffer,bayes1buffer,type = 'l',xlim = c(1,length(iterationbuffer)),ylim = c(-5,5),col = "red",xlab = "Iteration",ylab = "Normalised Parameter Value",main = "Estimating Bayes Parameters\n")#
          points(iterationbuffer,bayes2buffer,type = 'l',col = "blue")#
					points(iterationbuffer,bayes3buffer,type = 'l',col = "darkgreen")#
					points(iterationbuffer,bayes4buffer,type = 'l',col = "orange")#
          legend(1,-1,legend = c("DOSE1","DOSE2","DOSE3","ERR"),lty = c(1,1),col = c("red","blue","darkgreen","orange"))#
	    	}#
			}#
		objective#
	}#
  plot.new() #
  bayes1buffer <<- NA  #
  bayes2buffer <<- NA#
	bayes3buffer <<- NA#
	bayes4buffer <<- NA#
#
	optimised.doses <- optim(par,optimise.dose,hessian = FALSE,method = "L-BFGS-B",lower = lower.limit,upper = upper.limit,control = list(parscale = par,factr = 1e12))#
	optimised.doses
Intiial parameter estimates for dose optimisation#
	last.dose <- 468135.7002#
	last.IPRE <- 0.18832934#
		if (last.IPRE < 3 | last.IPRE >= 5) {#
			initial.dose <- 3/last.IPRE*last.dose	#
		} else {#
			initial.dose <- last.dose	#
		}#
		if (initial.dose > 1000000) {#
			initial.dose <- NA#
		}#
#
	if (is.na(initial.dose) == FALSE & initial.dose != last.dose) {#
			initial.par <- c(initial.dose,initial.dose,initial.dose,0.01)#
			lower.limit <- c(0.0001,0.0001,0.0001,0.0001)#
			upper.limit <- c(Inf,Inf,Inf,Inf)#
			par <- initial.par#
			optimise.dose <- function(par) {#
				input.optimise.data$amt[1] <- par[1]#
				input.optimise.data$amt[2] <- par[2]#
				input.optimise.data$amt[3] <- par[3]#
				err <- par[4]#
				new.optimise.data <- optim.mod1 %>% data_set(input.optimise.data) %>% mrgsim()#
				new.optimise.data <- as.data.frame(new.optimise.data)#
				yhat <- new.optimise.data$IPRE[new.optimise.data$time > 378]#
				print(yhat)#
				res <- dnorm(3,yhat,yhat*err,log = T)	#
				objective <- -1*sum(res)#
#
				diagnosticflag <- T#
#
			    if (diagnosticflag == T) {#
			      bayes1buffer <<- c(bayes1buffer,log10(par[1]/initial.par[1]))#
			      bayes2buffer <<- c(bayes2buffer,log10(par[2]/initial.par[2]))#
						bayes3buffer <<- c(bayes3buffer,log10(par[3]/initial.par[3]))#
						bayes4buffer <<- c(bayes4buffer,log10(par[4]/initial.par[4]))#
			      iterationbuffer <- 1:length(bayes1buffer)#
			      if (length(iterationbuffer) %% 5 == 0) { #
		          plot(iterationbuffer,bayes1buffer,type = 'l',xlim = c(1,length(iterationbuffer)),ylim = c(-5,5),col = "red",xlab = "Iteration",ylab = "Normalised Parameter Value",main = "Estimating Bayes Parameters\n")#
		          points(iterationbuffer,bayes2buffer,type = 'l',col = "blue")#
							points(iterationbuffer,bayes3buffer,type = 'l',col = "darkgreen")#
							points(iterationbuffer,bayes4buffer,type = 'l',col = "orange")#
		          legend(1,-1,legend = c("DOSE1","DOSE2","DOSE3","ERR"),lty = c(1,1),col = c("red","blue","darkgreen","orange"))#
			    	}#
					}#
				objective#
			}#
		  plot.new() #
		  bayes1buffer <<- NA  #
		  bayes2buffer <<- NA#
			bayes3buffer <<- NA#
			bayes4buffer <<- NA#
#
			optimised.doses <- optim(par,optimise.dose,hessian = FALSE,method = "L-BFGS-B",lower = lower.limit,upper = upper.limit,control = list(parscale = par,factr = 1e12))#
	} else {#
		optimised.doses <- NA#
	}
optimised.doses
initial.dose
if (is.na(initial.dose) == FALSE & initial.dose != last.dose) {#
			DOSE1 <- optimised.doses$par[1]#
			DOSE2 <- optimised.doses$par[2]#
			if (interval == 2) {#
				DOSE3 <- NA#
				ERR <- optimised.doses$par[3]#
			}#
			if (interval != 2) {	#
				DOSE3 <- optimised.doses$par[3]#
				ERR <- optimised.doses$par[4]#
			}#
		} else if (initial.dose == last.dose) {#
			DOSE1 <- last.dose#
			DOSE2 <- last.dose#
			DOSE3 <- NA#
			if (interval != 2) {	#
				DOSE3 <- last.dose#
			}#
			ERR <- 0#
		} else {#
			DOSE1 <- 1000000#
			DOSE2 <- 1000000#
			DOSE3 <- NA#
			if (interval != 2) {	#
				DOSE3 <- 1000000#
			}#
			ERR <- 0#
		}
interval <- 4
if (is.na(initial.dose) == FALSE & initial.dose != last.dose) {#
			DOSE1 <- optimised.doses$par[1]#
			DOSE2 <- optimised.doses$par[2]#
			if (interval == 2) {#
				DOSE3 <- NA#
				ERR <- optimised.doses$par[3]#
			}#
			if (interval != 2) {	#
				DOSE3 <- optimised.doses$par[3]#
				ERR <- optimised.doses$par[4]#
			}#
		} else if (is.na(initial.dose) == FALSE & initial.dose == last.dose) {#
			DOSE1 <- last.dose#
			DOSE2 <- last.dose#
			DOSE3 <- NA#
			if (interval != 2) {	#
				DOSE3 <- last.dose#
			}#
			ERR <- 0#
		} else {#
			DOSE1 <- 1000000#
			DOSE2 <- 1000000#
			DOSE3 <- NA#
			if (interval != 2) {	#
				DOSE3 <- 1000000#
			}#
			ERR <- 0#
		}
DOSE1
DOSE2
DOSE3
ERR
